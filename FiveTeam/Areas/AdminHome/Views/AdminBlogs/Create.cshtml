@model FiveTeam.Models.BlogsFiveTeam

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/AdminHome/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    /* Các thuộc tính chung */
    .heading {
        font-weight: bolder; /* Tăng độ đậm của font */
        text-align: center; /* Căn giữa nội dung */
        padding: 5rem 0 2rem; /* Kết hợp padding cho phía trên và dưới, và padding cho phía trái và phải là 0 */
        font-size: 3.5rem; /* Kích thước font */
        color: var(--black); /* Màu chữ */
    }

        /* Hiệu ứng cho phần chữ trong thẻ <span> của .heading */
        .heading span {
            background: #FF8C00; /* Màu nền cho phần chữ */
            color: #fff; /* Màu chữ */
            display: inline-block; /* Hiển thị phần tử dạng block nhưng vẫn giữ lại tính chất của inline */
            padding: .5rem 3rem; /* Padding cho phía trên và dưới, và padding cho phía trái và phải */
            clip-path: polygon(100% 0, 93% 50%, 100% 99%, 0% 100%, 7% 50%, 0% 0%); /* Định dạng dạng hình dạng cho phần tử */
        }

    /* Phần form */
    .form-horizontal, h2, h4 {
        width: 60%; /* Độ rộng */
        margin: 0 auto; /* Canh giữa */
        line-height: 1.5rem; /* Chiều cao dòng */
        border-radius: .5rem; /* Bo tròn viền */
        background: #eee; /* Màu nền */
        color: var(--black); /* Màu chữ */
        font-size: 1.5rem; /* Kích thước font */
        font-weight: bolder; /* Tăng độ đậm của font */
    }

    .form-group {
        margin-bottom: 10px; /* Khoảng cách dưới của các nhóm form */
    }

    .control-label {
        text-align: right; /* Căn phải cho nhãn của input */
    }

    .col-md-10 {
        padding: 0; /* Xóa padding */
        color: #FF8C00; /* Màu chữ */
    }

    .form-control {
        background-color: #eee; /* Màu nền cho input */
        font-size: 1.5rem; /* Kích thước font */
        width: 90%; /* Độ rộng */
    }

        .form-control:hover {
            color: var(--orange); /* Màu chữ khi di chuột qua */
            cursor: pointer; /* Con trỏ chuột thành pointer */
        }

    /* Nút */
    .btn-default {
        padding: 0.5rem 1rem; /* Padding */
        font-size: 1.5rem; /* Kích thước font */
        border-radius: 0.5rem; /* Bo tròn viền */
        font-weight: bolder; /* Tăng độ đậm của font */
        color: #FF8C00; /* Màu chữ */
    }

        .btn-default:hover {
            background-color: var(--orange); /* Màu nền khi di chuột qua */
        }

    h3 {
        width: 60%; /* Độ rộng */
        margin: 0 auto; /* Canh giữa */
        font-size: 3rem; /* Kích thước font */
        font-weight: bolder; /* Tăng độ đậm của font */
        color: #FF8C00; /* Màu chữ */
    }

    /* Đặt màu chữ cho nút */
    .btn-default {
        color: #FF8C00; /* Màu chữ */
    }

</style>

<h1 class="heading" style="color: #000080"> Tạo <span>Bài Viết</span> </h1>
<h3>

</h3>

@using (Html.BeginForm("Create", "AdminBlogs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="color: #000080;">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ByUser, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ByUser, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ByUser, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContentTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContentTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContentTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="fileAnh" class="form-control" />
                @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>

            <div class="col-md-offset-2 ">
                @Html.ActionLink("Back to List", "ListBlogs", null, new { @class = "btn btn-default" })
            </div>

        </div>
    </div>
}

